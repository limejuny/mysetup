[alias]
  ad = "!git ls-files --modified --others --exclude-standard | peco --initial-filter=Fuzzy | xargs -r git add --"
  df = "!git diff --name-only HEAD | peco --initial-filter=Fuzzy | xargs -r git diff HEAD --"
  rs = "!git diff --name-only --cached | peco --initial-filter=Fuzzy | xargs -r git reset -q --"
  rb = "!git diff --name-only HEAD | peco --initial-filter=Fuzzy | xargs -I {} -r sh -c 'git reset -q -- {}; git checkout -- {} 2>/dev/null'"
  co = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch --all | grep -v HEAD | fzf --bind "alt-j:preview-down,alt-k:preview-up,alt-d:preview-page-down,alt-u:preview-page-up" --preview 'echo {} | cut -c 3- | xargs git log --color --graph' | cut -c 3-); git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); else git checkout $args; fi }; f"
  co = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch | grep -v HEAD | fzf --bind "alt-j:preview-down,alt-k:preview-up,alt-d:preview-page-down,alt-u:preview-page-up" --preview 'echo {} | cut -c 3- | xargs git log --color --graph' | cut -c 3-); git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); else git checkout $args; fi }; f"
  lg = log --color --graph --date=short --decorate=short --pretty=format:'%C(white)%h%Creset %C(blue)%cn%Creset %C(green)%cd%Creset %C(red reverse)%d%Creset %C(reset)%s' --all
  ls = !git lg | fzf -m --ansi --layout=reverse --bind "alt-j:preview-down,alt-k:preview-up,alt-d:preview-page-down,alt-u:preview-page-up" --preview=\"echo {} | sed 's/-.*$//' | egrep -o '[0-9a-f]+' | head -n 1 | xargs git show --color=always\" | sed 's/-.*$//' | egrep -o '[0-9a-f]+'
  di = "!f() { args=$@; [ -z \"$args\" ] && args=HEAD; ([ \"$args\" = \"HEAD\" ] && git status --short || git diff --name-status $args | sed 's/\t/  /') | fzf --bind "alt-j:preview-down,alt-k:preview-up,alt-d:preview-page-down,alt-u:preview-page-up" --preview \"echo {} | cut -c 4- | xargs git diff --color=always $args --\" --multi --height 90% | cut -c 4-; }; f | xargs -o git difftool -t vimdiff"
  stl = !git stash list | fzf --bind "alt-j:preview-down,alt-k:preview-up,alt-d:preview-page-down,alt-u:preview-page-up" --preview 'echo {} | cut -d: -f1 | xargs git stash show -p --color=always' --height 90% | cut -d: -f1
  sta = !git stl | xargs git stash apply
  std = !git stl | xargs git stash drop
